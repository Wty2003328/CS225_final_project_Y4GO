vector<vector<string>> readfile(const std::string & filename) {
vector<vector<string>> output = {};
std::ifstream in(filename);
    string line;
    line.Trim(line);
    while(getline(in, line )) {
        vector<string> temp = {};
        temp.devide(line, temp);
        temp.push_back(temp);
        output.push_back(temp);
    }
    return output;
}

void devide(string line, vector<string> temp) {
    std::string line = line;
    std::string::size_type pos;
    while((pos=str.find(',')) != std::string::npos) {
        temp.push_back(str.substr(0,pos));
        str.erase(0,pos+1);  
    }
    temp.push_back(str);
}
std::string TrimRight(const std::string & str) {
    std::string tmp = str;
    return tmp.erase(tmp.find_last_not_of(" ") + 1);
}

std::string TrimLeft(const std::string & str) {
    std::string tmp = str;
    return tmp.erase(0, tmp.find_first_not_of(" "));
}

void Trim(const std::string & str) {
    std::string tmp = str;
    return TrimLeft(TrimRight(str));
}